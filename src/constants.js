// constants.js

const MOSCOW_ZONE = 'Europe/Moscow';

const timeUnitNormalization = {
  'месяц': ['месяц', 'месяца', 'месяцев'],
  'неделя': ['неделя', 'недели', 'недель', 'неделю'],
  'год': ['год', 'года', 'лет'],
  'час': ['час', 'часа', 'часов', 'часу'],
  'день': ['день', 'дня', 'дней', 'дню'],
  'минута': ['минута', 'минуты', 'минут', 'минуту']
};

const timeUnitMap = {};
Object.entries(timeUnitNormalization).forEach(([nominative, forms]) => {
  forms.forEach(form => {
    timeUnitMap[form.toLowerCase()] = nominative;
  });
});

const dayOfWeekNormalization = {
  'понедельник': ['понедельник', 'понедельника', 'понедельнику', 'понедельником', 'понедельнике'],
  'вторник': ['вторник', 'вторника', 'вторнику', 'вторником', 'вторнике'],
  'среда': ['среда', 'среды', 'среду', 'средой', 'среде'],
  'четверг': ['четверг', 'четверга', 'четвергу', 'четвергом', 'четверге'],
  'пятница': ['пятница', 'пятницы', 'пятницу', 'пятницей', 'пятнице'],
  'суббота': ['суббота', 'субботы', 'субботу', 'субботой', 'субботе'],
  'воскресенье': ['воскресенье', 'воскресенья', 'воскресенью', 'воскресеньем', 'воскресенье']
};

const dayOfWeekMap = {};
Object.entries(dayOfWeekNormalization).forEach(([nominative, forms]) => {
  forms.forEach(form => {
    dayOfWeekMap[form.toLowerCase()] = nominative;
  });
});

const dayNameToWeekday = {
  'понедельник': 1,
  'вторник': 2,
  'среда': 3,
  'четверг': 4,
  'пятница': 5,
  'суббота': 6,
  'воскресенье': 7
};

const fuzzyCorrections = {
  'миут': 'минута',
  'миют': 'минута',
  'миу': 'минута',
  'полсезавтра': 'послезавтра',
  'неделы': 'неделя',
  'кажый': 'каждый',
  'учемба': 'учеба',
  'минту': 'минута',
  'минутка': 'минута',
  'минутс': 'минута'
};

const monthNames = {
  'январь': 1, 'января': 1, 'январе': 1,
  'февраль': 2, 'февраля': 2, 'феврале': 2,
  'март': 3, 'марта': 3, 'марте': 3,
  'апрель': 4, 'апреля': 4, 'апреле': 4,
  'май': 5, 'мая': 5, 'мае': 5,
  'июнь': 6, 'июня': 6, 'июне': 6,
  'июль': 7, 'июля': 7, 'июле': 7,
  'август': 8, 'августа': 8, 'августе': 8,
  'сентябрь': 9, 'сентября': 9, 'сентябре': 9,
  'октябрь': 10, 'октября': 10, 'октябре': 10,
  'ноябрь': 11, 'ноября': 11, 'ноябре': 11,
  'декабрь': 12, 'декабря': 12, 'декабре': 12
};

const unitDeclensions = {
  'минута': { one: 'минута', few: 'минуты', many: 'минут' },
  'час': { one: 'час', few: 'часа', many: 'часов' },
  'день': { one: 'день', few: 'дня', many: 'дней' },
  'неделя': { one: 'неделя', few: 'недели', many: 'недель' },
  'месяц': { one: 'месяц', few: 'месяца', many: 'месяцев' },
  'год': { one: 'год', few: 'года', many: 'лет' }
};

// Регулярные выражения для различных форматов
const regexps = {
  // Абсолютная дата с повторением: "17 апреля каждый год день рождения"
  absoluteDateRegex: /^(\d{1,2})\s+([а-яё]+)(?:\s+в\s+(\d{1,2}(?:[:.]\d{1,2})?))?(?:\s+кажд(?:ый|ая|ую|ое|ые)(?:\s+(\d+)?)?\s+([А-Яа-яёЁ]+)\s+(.+))?$/i,
  // Ежемесячное событие: "каждый месяц 15 числа зарплата"
  monthlyDayRegex: /^каждый месяц\s+(\d{1,2})\s+(числа|день)(?:\s+в\s+(\d{1,2}(?:[:.]\d{1,2})?))?\s+(.+)$/i,
  // Повторяющееся уведомление: "каждые 30 минут проверка" или "каждый год 17 апреля днюха"
  repeatRegex: /^кажд(?:ый|ая|ую|ое|ые)(?:\s+(\d+))?\s+([А-Яа-яёЁ]+)(?:\s+(\d{1,2})\s+([а-яё]+)(?:\s+в\s+(\d{1,2}(?:[:.]\d{1,2})?))?)?\s+(.+)$/iu,
  // Разовое уведомление: "через 30 минут купить молоко"
  throughRegex: /^через\s+(?:(\d+(?:\.\d+)?)\s+)?([A-Za-zА-Яа-яёЁ]+)(?:\s+в\s+(\d{1,2}(?:[:.]\d{1,2})?))?\s+(.+)$/i,
  // Формат "сегодня/завтра/послезавтра" с необязательным временем (поддерживает "в 9" или "в 09:00")
  todayTomorrowRegex: /^(сегодня|завтра|послезавтра)(?:\s+в\s+(\d{1,2}(?:[:.]\d{0,2})?))?\s+(.+)$/i,
  // Формат с разделителем для времени: поддержка ":" и "."
  timeWithDotRegex: /^в\s*(\d{1,2})[:.](\d{1,2})\s+(.+)$/i,
  // Числовой формат времени без разделителя: "в1015 текст"
  timeNumericRegex: /^в\s*(\d{3,4})\s+(.+)$/i,
  // Формат с пробелом между часами и минутами: "в 10 15 текст"
  timeWithSpaceRegex: /^в\s*(\d{1,2})\s+(\d{1,2})\s+(.+)$/i,
  // Простой формат: "в 10 текст"
  simpleTimeRegex: /^в\s*(\d{1,2})\s+(.+)$/i,
  // Форматы для "утром/вечером" с указанием дня: "сегодня утром завтрак" или "утром сегодня завтрак"
  dayMorningEveningRegex: /^(сегодня|завтра|послезавтра)\s+(утром|вечером)\s+(.+)$/i,
  morningEveningRegex: /^(утром|вечером)(?:\s+(сегодня|завтра|послезавтра))?\s+(.+)$/i
};

const errorMessages = {
  missingText: 'Текст напоминания обязателен',
  timePassed: 'Указанное время уже прошло',
  invalidTime: 'Недопустимое время (часы 0–23, минуты 0–59)',
  invalidDate: 'Недопустимая дата',
  invalidMonth: 'Некорректный месяц',
  complexTime: 'Сложная временная конструкция, упростите',
  nonPositiveDuration: 'Длительность должна быть положительной',
  unknownFormat: 'Не удалось распознать формат напоминания',
  invalidRepeatUnit: 'Недопустимая единица повторения'
};

module.exports = {
  MOSCOW_ZONE,
  timeUnitNormalization,
  timeUnitMap,
  dayOfWeekNormalization,
  dayOfWeekMap,
  dayNameToWeekday,
  fuzzyCorrections,
  monthNames,
  unitDeclensions,
  regexps,
  errorMessages
};